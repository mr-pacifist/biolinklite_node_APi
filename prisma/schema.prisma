// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}



model User {
  id        String @id @default(uuid())
  firstName String
  lastName  String
  userName  String  @unique
  email     String? @unique
  phone     String
  password  String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  Profile   Profile[]
  addresses Address[] 
}

model Profile {
  id                     String @id @default(uuid())
  userId                 String
  themeId                Int      @default(2)
  name                   String
  bio                    String
  profilePhoto           String
  coverPhoto             String
  sub_directory          String @unique
  seo_title              String
  seo_description        String
  createdAt              DateTime @default(now())
  updatedAt              DateTime @updatedAt
  ProfileCustomLink      ProfileCustomLink[]
  ProfileHeader          ProfileHeader[]
  ProfileSocialMediaLink ProfileSocialMediaLink[]
  Theme                  Theme @relation(fields: [themeId], references: [id])
  User                   User @relation(fields: [userId], references: [id])
}
model Address {
  id         String  @id @default(uuid())
  userId     String  @unique
  city       String
  state      String
  postalCode String
  country    String
  user User   @relation(fields: [userId], references: [id])
}

model Country {
  id        Int @id @default(autoincrement())
  name      String
}

model CustomLink {
  id   String @id @default(uuid())
  name String
  url  String
  ProfileCustomLink ProfileCustomLink[]
}

model Header {
  id            String @id @default(uuid())
  title         String
  ProfileHeader ProfileHeader[]
}

model ProfileCustomLink {
  id           String @id @default(uuid())
  profileId    String
  customLinkId String 
  Profile      Profile @relation(fields: [profileId], references: [id])
  CustomLink   CustomLink @relation(fields: [customLinkId], references: [id])
  
}

model ProfileHeader {
  id        String @id @default(uuid())
  profileId String
  headerId  String
  Profile   Profile @relation(fields: [profileId], references: [id])
  Header    Header @relation(fields: [headerId], references: [id])
  
}

model ProfileSocialMediaLink {
  id                         String @id @default(uuid())
  profileId                  String
  socialMediaId              Int
  socialMediaSubdirectory    String
  Profile       Profile @relation(fields: [profileId], references: [id])
  SocialMedia   SocialMedia @relation(fields: [socialMediaId], references: [id])
}

model SocialMedia {
  id                     Int @id @default(autoincrement())
  name                   String
  url                    String
  icon                   String
  ProfileSocialMediaLink ProfileSocialMediaLink[]
}

model Theme {
  id      Int @id @default(autoincrement())
  name    String
  Profile Profile[]
}
